name: 🔧 BULLETPROOF Deployment

on:
  workflow_dispatch:  # Manual trigger for testing
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Install Salesforce CLI (Latest)
        run: |
          echo "🔧 Installing latest Salesforce CLI..."
          npm install -g @salesforce/cli@latest
          sf version --verbose
          echo "✅ CLI installation completed"
      
      - name: 🔍 Complete Environment Debug
        run: |
          echo "🔍 === ENVIRONMENT DEBUG ==="
          echo "OS: $(uname -a)"
          echo "Node: $(node --version)"
          echo "Branch: ${{ github.ref_name }}"
          echo "Repo: ${{ github.repository }}"
          echo ""
          echo "🔐 Checking secret availability..."
          if [ -z "${{ secrets.SALESFORCE_AUTH_URL }}" ]; then
            echo "❌ ERROR: SALESFORCE_AUTH_URL secret is missing!"
            echo "📋 To fix this:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Add secret named: SALESFORCE_AUTH_URL"
            echo "3. Use value: force://PlatformCLI::5Aep861iCXbTx3lghQS69r1Dtg.l29CR56jv_EeVJj_dLN7lS5ELw.D6K59BAvpA0hDrb_nkjDSa8g.JBv5N0Mq@cloudseek-dev-ed.develop.my.salesforce.com"
            exit 1
          else
            echo "✅ SALESFORCE_AUTH_URL secret exists"
            echo "Length: ${#SALESFORCE_AUTH_URL} characters"
          fi
        env:
          SALESFORCE_AUTH_URL: ${{ secrets.SALESFORCE_AUTH_URL }}
      
      - name: 🔐 Robust Salesforce Authentication
        run: |
          echo "🔐 === SALESFORCE AUTHENTICATION ==="
          echo "Target: cloudseek-dev-ed.develop.my.salesforce.com"
          
          # Create auth file for more reliable authentication
          echo "${{ secrets.SALESFORCE_AUTH_URL }}" > auth_url.txt
          
          echo "🔓 Attempting authentication..."
          sf org login sfdx-url --sfdx-url-file auth_url.txt --alias TargetOrg --set-default
          
          echo "✅ Authentication successful!"
          sf org display --target-org TargetOrg
          
          # Clean up auth file
          rm -f auth_url.txt
        env:
          SALESFORCE_AUTH_URL: ${{ secrets.SALESFORCE_AUTH_URL }}
      
      - name: 🧪 Create Ultra-Simple Test Class
        run: |
          echo "🧪 === CREATING DEPLOYMENT TEST CLASS ==="
          mkdir -p force-app/main/default/classes
          
          cat > force-app/main/default/classes/DeploymentTest.cls << 'EOF'
          /**
           * Ultra-simple test class for CI/CD verification
           * Zero dependencies - guaranteed to deploy
           */
          public class DeploymentTest {
              public static String getDeploymentInfo() {
                  return 'Successfully deployed on: ' + System.now().format('yyyy-MM-dd HH:mm:ss');
              }
              
              public static Boolean isWorking() {
                  return true;
              }
          }
          EOF
          
          cat > force-app/main/default/classes/DeploymentTest.cls-meta.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <ApexClass xmlns="http://soap.sforce.com/2006/04/metadata">
              <apiVersion>59.0</apiVersion>
              <status>Active</status>
          </ApexClass>
          EOF
          
          echo "✅ Files created successfully!"
          echo "📋 File verification:"
          cat force-app/main/default/classes/DeploymentTest.cls
      
      - name: 🚀 Deploy to Salesforce (No Tests)
        run: |
          echo "🚀 === SALESFORCE DEPLOYMENT ==="
          echo "Method: Deploy without running tests (fastest)"
          echo "Target: TargetOrg"
          
          sf project deploy start \
            --source-dir force-app \
            --target-org TargetOrg \
            --test-level NoTestRun \
            --wait 15 \
            --verbose
          
          echo "✅ DEPLOYMENT SUCCESSFUL!"
      
      - name: ✅ Verify Deployment Success
        run: |
          echo "✅ === DEPLOYMENT VERIFICATION ==="
          
          echo "🔍 Testing deployed class..."
          sf apex run --target-org TargetOrg --code "System.debug('Test: ' + DeploymentTest.getDeploymentInfo());"
          
          echo ""
          echo "🎉 === SUCCESS SUMMARY ==="
          echo "✅ Authentication: PASSED"
          echo "✅ Class Creation: PASSED"
          echo "✅ Deployment: PASSED"
          echo "✅ Verification: PASSED"
          echo ""
          echo "🌐 Check your Salesforce org:"
          echo "   https://cloudseek-dev-ed.develop.my.salesforce.com"
          echo ""
          echo "📍 Navigate to: Setup → Apex Classes → DeploymentTest"
          echo ""
          echo "🎯 Your CI/CD pipeline is now working!"
